plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.allopen'  version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.0'
    id 'org.jetbrains.kotlin.kapt' version '1.8.0'
    id 'jvm-test-suite'
}
group 'uk.claritygroup'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

kapt {
   keepJavacAnnotationProcessors = true
}

repositories {
    mavenCentral()
}
allOpen {
    annotations(
            "jakarta.persistence.Entity",
            "org.springframework.context.annotation.Configuration",
            "org.springframework.web.bind.annotation.RestController",
            "uk.claritygroup.kotlin.entity.Metrics"
    )
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}
kotlin {
    jvmToolchain(17)
}
sourceSets {
    main {
        java.srcDirs += "${buildDir}/generated"
        kotlin.srcDirs += "${buildDir}/generated"
    }

}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.jmockit:jmockit:1.49'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'io.mockk:mockk:1.13.5'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    testImplementation 'io.projectreactor:reactor-test:3.5.8'
    annotationProcessor 'org.projectlombok:lombok'
    //annotationProcessor 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'
    kapt 'org.hibernate:hibernate-jpamodelgen:6.1.7.Final'
    testImplementation 'com.h2database:h2:2.1.214'
}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
    useJUnitPlatform ()
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}


